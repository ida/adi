<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">
<body>
<metal:block fill-slot="top_slot"
   tal:define="dummy python:request.set('disable_border',1)" />
<metal:main fill-slot="content-core">
<div metal:use-macro="here/navigator/macros/navigator" />
<div
  tal:define="
      huhu view/getActiveTime;
      wftool        python: context.portal_workflow;
      Std           modules/Products.PythonScripts/standard;
      newline_to_br nocall:Std/newline_to_br;

      created       context/created;
      expires       context/expires;
      modified      context/modified;
      transis       python: wftool.getTransitionsFor(context);
      portal_url    context/plone_portal_state/portal_url;
      status        context/plone_context_state/workflow_state;
      children      context/getFolderContents;
      hasChildren   python: len(children) > 0;
      siblings      context/aq_parent/getFolderContents;
      hasSiblings   python: len(siblings) > 0;
      trans_url     string:./content_status_modify?workflow_action=;
      trans_comment_url string:./content_status_comment?workflow_action=;

now_datetime 
  python:DateTime();

now_in_ms
  python: now_datetime.millis();

now 
  python:str(now_datetime)[:24];
now_year
  python:now[:4];
now_month
  python:now[5:7];
now_day
  python:now[8:10];
now_hour
  python:now[11:13];
now_minute
  python:now[14:16];
now_second
  python:now[17:19];

born_in_ms 
  python: created.millis();
born_to_now_diff_in_ms
  python: (now_in_ms - born_in_ms);
born_to_now_diff_in_scs
  python: born_to_now_diff_in_ms / 1000;
born_to_now_diff_in_mins
  python: born_to_now_diff_in_scs / 60;
born_to_now_diff_in_hrs
  python: born_to_now_diff_in_mins / 60;
born_to_now_diff_in_dys
  python: born_to_now_diff_in_hrs / 24;
born_to_now_diff_in_mths
  python: born_to_now_diff_in_dys / 30;
born_to_now_diff_in_yrs
  python: born_to_now_diff_in_mths / 12;


born_to_now_mins_left
  python: born_to_now_diff_in_mins - (born_to_now_diff_in_hrs * 60);
born_to_now_hrs_left
  python: born_to_now_diff_in_hrs - (born_to_now_diff_in_dys * 24);
born_to_now_dys_left
  python: born_to_now_diff_in_dys - (born_to_now_diff_in_mths * 30);
born_to_now_mth_left
  python: born_to_now_diff_in_mths - (born_to_now_diff_in_yrs * 12);
born_to_now_yrs_left
  python: ( born_to_now_diff_in_ms - (born_to_now_diff_in_mths * 12) )
          * 1000 * 60 * 60 * 24 * 30 * 12;
  


mod_in_ms 
  python: modified.millis();
now_to_mod_diff_in_ms
  python: (now_in_ms - mod_in_ms);
now_to_mod_diff_in_scs
  python: now_to_mod_diff_in_ms / 1000;
now_to_mod_diff_in_mins
  python: now_to_mod_diff_in_scs / 60;

expires_in_ms 
  python: expires.millis();
now_to_exp_ms
  python: (expires_in_ms - now_in_ms);
now_to_exp_scs
  python: now_to_exp_ms / 1000;
now_to_exp_mins
  python: now_to_exp_scs / 60;
now_to_exp_hrs
  python: now_to_exp_mins / 60;
now_to_exp_dys
  python: now_to_exp_hrs / 24;
now_to_exp_mnths
  python: now_to_exp_dys / 30;
now_to_exp_yrs
  python: now_to_exp_dys / 365;
expHasPassed
  python: now_to_exp_ms < 0;
  "
  tal:attributes="class status">
<tal:tal tal:content="huhu" />
<tal:tal tal:content="now" />
<tal:tal tal:content="expires" />

<tal:expiration>
  <tal:passed tal:condition="not:expHasPassed">
    Expires in
  </tal:passed>
  <tal:futur tal:condition="expHasPassed">
    Expired
  </tal:futur>
  <tal:tal tal:replace="now_to_exp_yrs"/>
  years
  <tal:tal tal:replace="now_to_exp_mnths"/>
  months
  <tal:tal tal:replace="now_to_exp_yrs"/>
  days
  <tal:tal tal:replace="now_to_exp_yrs"/>
  hours
  <tal:tal tal:replace="now_to_exp_yrs"/>
  minutes
  <tal:years tal:condition="python:now_to_exp_yrs != 0">
    <tal:passed tal:condition="expHasPassed"
          tal:define="now_to_exp_yrs python:now_to_exp_yrs * -1"
          tal:replace="now_to_exp_yrs">
      42
    </tal:passed>
    <tal:futur tal:condition="not:expHasPassed"
               tal:replace="now_to_exp_yrs">
      42
    </tal:futur>
    years
  </tal:years>

  <tal:passed tal:condition="expHasPassed">
    ago
  </tal:passed>
</tal:expiration>


 <!--
 <div tal:content="
-expires
+born_to_now_mth_left
 " />
months
 <div tal:content="
now_to_exp_yrs
born_to_now_dys_left
 " />
-now
days
 <div tal:content="
now
" />
Born
&nbsp;
&nbsp;
&nbsp;
<span tal:replace="
age
" />
ago.
<br>
Modified
<span tal:replace="
last_modifica
" />
ago.
<br>

We are in the year
<span tal:replace="
now_year
born_to_now_hrs_left
 " />
at the
<span tal:replace="
now_day
" />-th day of the
<span tal:replace="
now_month
" />-th month, in the
<span tal:replace="
now_hour
" />-th hour and it's

-->
<!--
<div tal:content="
born_to_now_mth_left
" />
months
<div tal:content="
born_to_now_dys_left
" />
days
<div tal:content="
born_to_now_hrs_left
" />
hours
<div tal:content="
born_to_now_mins_left
" />
minutes
<div id="steps-navi">
      <a
         href="./.."
         title="Step up"
         tal:content="string:&uarr;">
        Step up
      </a>
      <tal:siblings tal:define="
        siblings python: context.aq_parent.getFolderContents();">
        <tal:sibling tal:repeat="sibling siblings">
          <tal:this tal:condition="python: sibling['id']==context.getId()"
                       tal:define="index repeat/sibling/index;
                                   hasPrev python: index > 0;
                                   hasNext python: index < len(siblings) - 1;">
            <tal:prev tal:condition="hasPrev" tal:define="
              href
              python:
              '../' + context.aq_parent.getFolderContents()[index - 1]['id']
              ">
              <a tal:attributes="href href; title string:Step back;"
                 tal:content="string:&larr;">
                Step back
              </a>
            </tal:prev>
            <a style="opacity:0.5" tal:condition="not: hasPrev"
               title="Step back dummy"
               disabled
               tal:content="string:&larr;">
                Step back dummy
            </a>

            <tal:next tal:condition="hasNext">
            <a tal:define="
              href
              python:
              '../' + context.aq_parent.getFolderContents()[index + 1]['id']"
               tal:attributes="href href;
                               title string:Go to next step;"
               tal:content="string:&rarr;">
                Go to next step
              </a>
            </tal:next>
            <a style="opacity:0.5" tal:condition="not: hasNext"
               title="No next step available"
               disabled
               tal:content="string:&rarr;">
                No next step available
            </a>
          </tal:this>
        </tal:sibling>
      </tal:siblings>
      <tal:kondinator tal:condition="python:len(context.getFolderContents()) > 0">
        <tal:definator tal:define="first_child_id python:context.getFolderContents()[0].id">
          <a
             tal:attributes="href python:context.absolute_url() + '/' + first_child_id"
             title="Step down"
             tal:content="string:&darr;">
            Step down
          </a>
        </tal:definator>
      </tal:kondinator>
      <a style="opacity:0.5" tal:condition="python:len(context.getFolderContents()) < 1"
         title="Step down dummy"
         disabled
         tal:content="string:&darr;">
         Step down dummy
      </a>
</div>
-->


  <div class="head" tal:define="person context/getResponsiblePerson;">
    <div class="info"
      tal:define="person python:context.getResponsiblePerson() or 'nobody';">
      Is
      <span tal:content="status"
            tal:attributes="class string:state-${status}">
        new/active/waiting/closed/blocked
      </span>
      and
      <a tal:attributes="href string:${portal_url}/author/${person};
                         class string:owner;
                         title string:See all steps ${person} is responsible of"
         tal:content="person">
        nobody
      </a>
       is responsible.
    </div><tal:comment tal:replace="nothing">EO .info</tal:comment>
    <div class="buttons">
      <a tal:content="string:&#9654;"
         tal:condition="python: status != 'active' and status != 'blocked'"
         tal:attributes="href string:${trans_url}start;
                         class string:start;
                         title string:Start">
        Start
      </a>
      <a tal:content="string:&#9208;"
         tal:condition="python: status != 'waiting' and status != 'new' and status != 'closed'"
         tal:attributes="href string:${trans_url}pause;
                         class string:pause;
                         title string:Pause">
        Pause
      </a>
      <a tal:content="string:&#11035;"
         tal:attributes="href string:${trans_url}close;
                         class string:close;
                         title string:Stop">
        Stop
      </a>
      <a tal:content="string:&#8416;"
         tal:attributes="href string:${trans_comment_url}block;
                         class string:block;
                         title string:Block">
        Block
      </a>
      <a class="add"
         href="./.."
         title="Step up"
         tal:content="string:&uarr;">
        Step up
      </a>
      <tal:kondinator tal:condition="python:len(context.getFolderContents()) > 0">
        <tal:definator tal:define="first_child_id python:context.getFolderContents()[0].id">
          <a class="add sub"
             tal:attributes="href python:context.absolute_url() + '/' + first_child_id"
             title="Step down"
             tal:content="string:&darr;">
            Step down
          </a>
        </tal:definator>
      </tal:kondinator>
      <a tal:condition="python:len(context.getFolderContents()) < 1"
         title="Step down dummy"
         disabled
         tal:content="string:&darr;">
         Step down dummy
      </a>
      <tal:siblings tal:define="
        siblings python: context.aq_parent.getFolderContents();">
        <tal:sibling tal:repeat="sibling siblings">
          <tal:this tal:condition="python: sibling['id']==context.getId()"
                       tal:define="index repeat/sibling/index;
                                   hasPrev python: index > 0;
                                   hasNext python: index < len(siblings) - 1;">
            <tal:prev tal:condition="hasPrev" tal:define="
              href
              python:
              '../' + context.aq_parent.getFolderContents()[index - 1]['id']
              ">
              <a tal:attributes="href href; title string:Step back;"
                 tal:content="string:&larr;">
                Step back
              </a>
            </tal:prev>
            <a tal:condition="not: hasPrev"
               title="Step back dummy"
               disabled
               tal:content="string:&larr;">
                Step back dummy
            </a>

            <tal:next tal:condition="hasNext">
            <a tal:define="
              href
              python:
              '../' + context.aq_parent.getFolderContents()[index + 1]['id']"
               tal:attributes="href href;
                               title string:Go to next step;"
               tal:content="string:&rarr;">
                Go to next step
              </a>
            </tal:next>
            <a tal:condition="not: hasNext"
               title="No next step available"
               disabled
               tal:content="string:&rarr;">
                No next step available
            </a>
          </tal:this>
        </tal:sibling>
      </tal:siblings>

      <a class="add"
         href="../createObject?type_name=Ticket"
         title="Add next-step"
         tal:content="string:+">
        Add next-step 
      </a>
      <a class="add sub"
         href="./createObject?type_name=Ticket"
         title="Add sub-step"
         tal:content="string:++">
        Add sub-step
      </a>
      <a class="edit"
         href="./edit"
         title="Edit this step">&#9998;<tal:comment tal:replace="nothing">
         <img src="edit.png" />
         Edit this step
      </tal:comment></a>
      <a href="./folder_contents"
         title="Change order and more"
         alt="Tetragram for centre"
         tal:content="string:&#119558;">
        Folder contents
      </a>
    </div><tal:comment tal:replace="nothing">EO .buttons</tal:comment>

    <div class="blockers"
       tal:define="dependency_of context/getIsDependencyOf;
                   depends_on context/getDependsOn;"
       tal:condition="python: dependency_of + depends_on != ''">

      <span tal:condition="depends_on"
            tal:define="
            results python:context.portal_catalog.searchResults(id = depends_on);
            ">
        <span tal:condition="python:len(results) > 0">
          <span
                tal:define="
                theObject python: results[0].getObject();
                ">
            Is blocked by
            <a tal:attributes="href theObject/absolute_url"
               tal:content="string:#${depends_on}">
              #27
            </a>
            !!!
          </span>
        </span>
      </span>
      <span tal:condition="dependency_of"
            tal:define="
            results python:context.portal_catalog.searchResults(id = dependency_of);
            ">
        <span tal:condition="python:len(results)>0"
              tal:define="
              theObject python: results[0].getObject();
              ">
            Is blocking
          <a tal:attributes="href theObject/absolute_url"
             tal:content="string:#${dependency_of}">
            #42
          </a>
        </span>
      </span>
    </div><tal:comment tal:replace="nothing">EO .blockers</tal:comment>
  </div><tal:comment tal:replace="nothing">EO .head</tal:comment>
<a href=".">
  <h2 tal:attributes="class string:state-${status}">
    <span id="title" tal:content="context/Title">
    Title
    </span>
  </h2>
</a/>
  <div class="body"
       tal:content="structure python:newline_to_br(context.getText())">
    Text
  </div>
  <ol class="substeps" tal:condition="context/getFolderContents">
      <!--
    <span>
      Substeps:
    </span>
      -->
    <li tal:repeat="item context/getFolderContents">
      <a tal:define="item_status item/review_state" tal:content="item/Title"
         tal:attributes="href python: context.absolute_url() + '/' + item.id;
                         class string:state-${item_status}">
        Substep title
      </a>
      <div class="body"
       tal:content="structure python:newline_to_br(item.getObject().getText())">
        Substep text
      </div>
    </li>
  </ol>


</div></metal:main></body></html>
