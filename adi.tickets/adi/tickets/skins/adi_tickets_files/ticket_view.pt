<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">
<body>
<tal:comment tal:replace="nothing">Don't show edit-bar:</tal:comment>
<metal:block fill-slot="top_slot" tal:define="dummy python:request.set('disable_border',1)" />
  <metal:main fill-slot="main">
    <tal:comment tal:replace="nothing">
    <a tal:attributes="href context/absolute_url">Re</a>
    This is the usual change-state-url:
    content_status_modify?workflow_action=
    If using wf.comments, we need:
    content_status_comment?workflow_action=
    </tal:comment>
    <tal:definator tal:define="wftool   python: context.portal_workflow;
                               transis  python: wftool.getTransitionsFor(context);
                               status  context/plone_context_state/workflow_state;
                               trans_url string:./content_status_comment?workflow_action=">
      <span class="edit-buttons">
        <tal:repetator tal:repeat="trans transis">
          <tal:definatus tal:define="id trans/id">
            <a tal:condition="python:id !='block' and id !='start' and id !='pause' and id != 'close'"
               tal:attributes="href string:./content_status_modify?workflow_action=${id};"
               tal:content="string: Caught unknown state: ${id}">
caught unknown state
            </a>
          </tal:definatus>
        </tal:repetator>
        <tal:repetator tal:repeat="trans transis">
          <tal:definatus tal:define="id trans/id">
            <a tal:condition="python:id=='block'"
               tal:attributes="href string:${trans_url}${id}"
               tal:content="id">
blocke
            </a>
          </tal:definatus>
        </tal:repetator>
        <tal:repetator tal:repeat="trans transis">
          <tal:definatus tal:define="id trans/id">
            <a tal:condition="python:id=='close'"
               tal:attributes="href string:./content_status_modify?workflow_action=${id}"
               tal:content="id">
close
            </a>
          </tal:definatus>
        </tal:repetator>
        <tal:repetator tal:repeat="trans transis">
          <tal:definatus tal:define="id trans/id">
            <a tal:condition="python:id=='start' or id=='pause'"
               tal:attributes="href string:./content_status_modify?workflow_action=${id}"
               tal:content="id">
start or pause
            </a>
          </tal:definatus>
        </tal:repetator>
        <!--
        <span tal:content="status"
              tal:attributes="class string:state-${status}">
State
        </span>
        -->
        <div>
        <a href="./createObject?type_name=Ticket" title="Create a new ticket here" tal:content="string:+">
+
        </a>
        <a href="./folder_contents" title="Folder contents" tal:content="string:i">
i
        </a>
        <a href="./.." title="Go one level up" tal:content="string:up">
up
        </a>
        <div>
      </span><tal:comment tal:replace="nothing">EO .edit-buttons</tal:comment>
      <h2 tal:attributes="class string:documentFirstHeading state-${status}">
        <a href="./edit" tal:content="context/Title" tal:attributes="class string:state-${status}">
Title
        </a>
      </h2>
      <div tal:content="structure context/getText">
Text
      </div>
      <div class="children" tal:condition="context/getFolderContents">
      <p class="children-header">Steps needed:</p>
      <ul>
        <li tal:repeat="item context/getFolderContents">
          <a tal:define="item_status item/review_state" tal:content="item/Title"
             tal:attributes="href python: context.absolute_url() + '/' + item.id;
                             class string:state-${item_status}">
          </a>
        </li>
      </ul>
      </div>
      </tal:definator>
  </metal:main>
</body>
</html>
